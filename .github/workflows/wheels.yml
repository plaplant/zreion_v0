name: Build wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [macos-10.15, macosx_*]
          - [windows-2019, win_amd64]
          - [windows-2019, win32]
        python: ["cp37", "cp38", "cp39", "cp310"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.1
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          CIBW_TEST_REQUIRES: packaging pytest pytest-cov pytest-cases
          CIBW_TEST_COMMAND: "python -m pytest {package}/tests"
          CIBW_TEST_SKIP: "*-win32"

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.python }}-${{ startsWith(matrix.buildplat[1], 'macosx') && 'macosx' || matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz
  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - name: Move folders around
        working-directory: dist
        run: |
          for dir in `ls .`; do
            cd $dir
            mv * ..
            cd ..
            rmdir $dir
          done
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          password: ${{ secrets.pypi_password }}
